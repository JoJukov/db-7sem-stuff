use lab6;

try {
    db.publisher.drop();
    db.author.drop();
    db.book.drop();
    db.warehouse.drop();
    db.shoppingCart.drop();
    db.libraryUser.drop();
    db.role.drop();
    db.publisher.deleteMany({});
    db.author.deleteMany({});
    db.book.deleteMany({});
    db.warehouse.deleteMany({});
    db.shoppingCart.deleteMany({});
    db.libraryUser.deleteMany({});
    db.role.deleteMany({});

    db.bookWithPublisher.drop();
} catch (e){
    print(e)
}

// ok
db.createCollection("publisher");
// ok
db.createCollection("author");
// ok
db.createCollection("book");
// ok
db.createCollection("warehouse");
// ok
db.createCollection("shoppingCart");
// ok
db.createCollection("libraryUser");
// ok
db.createCollection("role");

db.role.insertMany([
    {name: "role1"}
]);

for (var i = 1; i <= 10; i++) {
    db.libraryUser.insertOne({name:"user"+i, email:"email"+i+"@u", username: "usern"+i, role: db.role.findOne({name: "role1"})._id})
}

for (var i = 1; i <= 10; i++) {
    db.publisher.insertOne({name: "pub"+i, email: "email"+i+"@p"})
}

for (var i = 1; i <= 10; i++) {
    db.book.insertOne({title: "book"+i, year: 2000+i, publisher: db.publisher.findOne({name:"pub"+i})._id})
}

for (var i = 1; i <= 10; i++) {
    db.author.insertOne({name: "auth"+i, birthdate: i*191, birthCity: "city"+i,
     books:[
        {book: db.book.findOne({title:"book"+i})._id}
    ]})
}

// дозаполнение книги автором
for (var i = 1; i <= 10; i++) {
    db.book.updateOne({"title":"book"+i},
        {$set:{"authors":[
            {"author":db.author.findOne({name:"auth"+i})._id}
    ]}})
}

// нет смысла добавлять эту связь так же в книгу
for (var i = 1; i <= 10; i++) {
    db.shoppingCart.insertOne({user: db.libraryUser.findOne({name:"user"+i})._id,
    booking:[
        {book: db.book.findOne({title:"book"+i})._id, count:1}
   ]})
}

// связь с книгами достаточно хранить только на складе
for (var i = 1; i <= 10; i++) {
    db.warehouse.insertOne({name: "wrs"+i, address: "wadr"+i, city: "city"+i,
     storing:[
        {book: db.book.findOne({title:"book"+i})._id, count:i*11%4}
    ]})
}

// индекс
db.libraryUser.createIndex({name: 1, username: 1})

db.createView(
    "bookWithPublisher",
    "book",
    [
        {
        $lookup:
            {
                from: "publisher",
                localField: "publisher",
                foreignField: "_id",
                as: "P"
            }
        },
        {
      $project:
            {
                _id: 0,
                title: 1,
                year: 1,
                Pname: "$P.name"
         }
        },
        {
            $unwind: "$Pname"
        }
   ]
)





