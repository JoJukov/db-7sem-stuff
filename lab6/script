use lab6;

try {
    db.publisher.drop();
    db.author.drop();
    db.book.drop();
    db.warehouse.drop();
    db.shoppingCart.drop();
    db.libraryUser.drop();
    db.role.drop();
    db.publisher.deleteMany({});
    db.author.deleteMany({});
    db.book.deleteMany({});
    db.warehouse.deleteMany({});
    db.shoppingCart.deleteMany({});
    db.libraryUser.deleteMany({});
    db.role.deleteMany({});

    db.bookWithPublisher.drop();
} catch (e){
    print(e)
}

// ok
db.createCollection("publisher");
// ok
db.createCollection("author");
db.createCollection("book");
// ok
db.createCollection("warehouse");
// ok
db.createCollection("shoppingCart");
// ok
db.createCollection("libraryUser");
// ok
db.createCollection("role");

db.role.insertMany([
    {name: "role1"}
])

db.libraryUser.insertMany([
    {name:"user1", email:"email1@$u", username: "usern1", role: db.role.findOne({name: "role1"})._id}
])

db.publisher.insertMany([
   {name: "pub1", email: "email1@p"},
   {name: "pub2", email: "email2@p"},
   {name: "pub3", email: "email3@p"},
   {name: "pub4", email: "email4@p"},
   {name: "pub5", email: "email5@p"},
   {name: "pub6", email: "email6@p"},
   {name: "pub7", email: "email7@p"},
   {name: "pub8", email: "email8@p"},
   {name: "pub9", email: "email9@p"},
   {name: "pub10", email: "email10@p"},
]);

db.book.insertMany([
    {title: "book1", year: 2001, publisher: db.publisher.findOne({name:"pub1"})._id},
])

db.author.insertMany([
    {name: "auth1", birthdate: 2001, birthCity: "city1",
     books:[
        {book: db.book.findOne({title:"book1"})._id}
    ]}
])

// дозаполнение книги автором
db.book.updateMany({}, {
    $set:{"authors":[{"author":db.author.findOne({name:"auth1"})._id}]}
})

// нет смысла добавлять эту связь так же в книгу
db.shoppingCart.insertMany([
   {user: db.libraryUser.findOne({name:"user1"})._id,
    booking:[
        {book: db.book.findOne({title:"book1"})._id, count:1}
   ]}
])

// связь с книгами достаточно хранить только на складе
db.warehouse.insertMany([
    {name: "wrs1", address: "wadr1", city: "city1",
     storing:[
        {book: db.book.findOne({title:"book1"})._id, count:100}
    ]}
])

// индекс
db.libraryUser.createIndex({name: 1, username: 1})

db.createView(
    "bookWithPublisher",
    "book",
    [
        {
        $lookup:
            {
                from: "publisher",
                localField: "publisher",
                foreignField: "_id",
                as: "P"
            }
        },
        {
      $project:
            {
                _id: 0,
                title: 1,
                year: 1,
                name: "$P.name"
         }
        },
        {
            $unwind: "$name"
        }
   ]
)





